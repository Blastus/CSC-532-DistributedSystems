# This is a description of an original assembly language for WS.
WSA_V1 = dict(retrieve =         '     get',
              store =            '     set',
              read_number =      '     iint',
              read_character =   '     ichr',
              output_number =    '     oint',
              output_character = '     ochr',
              modulo =           '     mod',
              integer_division = '     div',
              subtraction =      '     sub',
              multiplication =   '     mul',
              addition =         '     add',
              jump_if_negative = '     less "{label}"',
              end_subroutine =   '     back',
              jump_if_zero =     '     zero "{label}"',
              end_program =      '     exit',
              call_subroutine =  '     call "{label}"',
              jump_always =      '     goto "{label}"',
              mark_location =    'part "{label}"',
              slide =            '     away {number}',
              copy =             '     copy {number}',
              swap =             '     swap',
              discard =          '     away',
              duplicate =        '     copy',
              push =             '     push {number}',
              number =           '[+-]?\d+',
              label =            '\w+',
              comment =          '#.*',
              empty =            '')